'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Systems")>  _
Partial Public Class DataClasses1DataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub Inserttbl_Absent(instance As tbl_Absent)
    End Sub
  Partial Private Sub Updatetbl_Absent(instance As tbl_Absent)
    End Sub
  Partial Private Sub Deletetbl_Absent(instance As tbl_Absent)
    End Sub
  Partial Private Sub Inserttbl_EmployeeInformation(instance As tbl_EmployeeInformation)
    End Sub
  Partial Private Sub Updatetbl_EmployeeInformation(instance As tbl_EmployeeInformation)
    End Sub
  Partial Private Sub Deletetbl_EmployeeInformation(instance As tbl_EmployeeInformation)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.DTR_Checking.My.MySettings.Default.SystemsConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property tbl_Absents() As System.Data.Linq.Table(Of tbl_Absent)
		Get
			Return Me.GetTable(Of tbl_Absent)
		End Get
	End Property
	
	Public ReadOnly Property tbl_EmployeeInformations() As System.Data.Linq.Table(Of tbl_EmployeeInformation)
		Get
			Return Me.GetTable(Of tbl_EmployeeInformation)
		End Get
	End Property
	
	Public ReadOnly Property tbl_Payrolls() As System.Data.Linq.Table(Of tbl_Payroll)
		Get
			Return Me.GetTable(Of tbl_Payroll)
		End Get
	End Property
	
	Public ReadOnly Property tbl_EmployeeRequirements() As System.Data.Linq.Table(Of tbl_EmployeeRequirement)
		Get
			Return Me.GetTable(Of tbl_EmployeeRequirement)
		End Get
	End Property
	
	Public ReadOnly Property tbl_OtherDetails() As System.Data.Linq.Table(Of tbl_OtherDetail)
		Get
			Return Me.GetTable(Of tbl_OtherDetail)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SP_PayrollAdjustment")>  _
	Public Function SP_PayrollAdjustment( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="EMPID", DbType:="VarChar(200)")> ByVal eMPID As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PERIODFROM", DbType:="Date")> ByVal pERIODFROM As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="NOD", DbType:="Decimal(8,2)")> ByVal nOD As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HOLIDAY", DbType:="Decimal(8,2)")> ByVal hOLIDAY As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="OVERTIME", DbType:="Decimal(8,2)")> ByVal oVERTIME As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SOTHERS", DbType:="Decimal(8,2)")> ByVal sOTHERS As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SOTHERSDETAILS", DbType:="VarChar(200)")> ByVal sOTHERSDETAILS As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SSS", DbType:="Decimal(8,2)")> ByVal sSS As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PhilHealth", DbType:="Decimal(8,2)")> ByVal philHealth As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PAGIBIG", DbType:="Decimal(8,2)")> ByVal pAGIBIG As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SSSb", DbType:="Decimal(8,2)")> ByVal sSSb As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PAGIBIGb", DbType:="Decimal(8,2)")> ByVal pAGIBIGb As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="OTHERSb", DbType:="Decimal(8,2)")> ByVal oTHERSb As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SSSLOAN", DbType:="Decimal(8,2)")> ByVal sSSLOAN As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PLOAN", DbType:="Decimal(8,2)")> ByVal pLOAN As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DOTHERS", DbType:="Decimal(8,2)")> ByVal dOTHERS As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DOTHERSDETAILS", DbType:="VarChar(200)")> ByVal dOTHERSDETAILS As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HOLIDAYDETAILS", DbType:="VarChar(200)")> ByVal hOLIDAYDETAILS As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="WTAX", DbType:="Decimal(8,2)")> ByVal wTAX As System.Nullable(Of Decimal)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), eMPID, pERIODFROM, nOD, hOLIDAY, oVERTIME, sOTHERS, sOTHERSDETAILS, sSS, philHealth, pAGIBIG, sSSb, pAGIBIGb, oTHERSb, sSSLOAN, pLOAN, dOTHERS, dOTHERSDETAILS, hOLIDAYDETAILS, wTAX)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SP_DTRWPAY")>  _
	Public Function SP_DTRWPAY(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal p_DATEFROM As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal p_DATETO As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(200)")> ByVal p_SEARCH As String) As ISingleResult(Of SP_DTRWPAYResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), p_DATEFROM, p_DATETO, p_SEARCH)
		Return CType(result.ReturnValue,ISingleResult(Of SP_DTRWPAYResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SP_CheckOT")>  _
	Public Function SP_CheckOT(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Datrfrom", DbType:="Date")> ByVal datrfrom As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Datrto", DbType:="Date")> ByVal datrto As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Name", DbType:="VarChar(200)")> ByVal name As String) As ISingleResult(Of SP_CheckOTResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), datrfrom, datrto, name)
		Return CType(result.ReturnValue,ISingleResult(Of SP_CheckOTResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.Sp_DisplayCorrectLeave")>  _
	Public Function Sp_DisplayCorrectLeave(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(200)")> ByVal name As String) As ISingleResult(Of Sp_DisplayCorrectLeaveResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), name)
		Return CType(result.ReturnValue,ISingleResult(Of Sp_DisplayCorrectLeaveResult))
	End Function

	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.Sp_FixLeave")>
	Public Function Sp_FixLeave() As Integer

		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo))
		Return CType(result.ReturnValue, Integer)

	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbl_Absent")>  _
Partial Public Class tbl_Absent
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _UserID As String
	
	Private _Date As System.Nullable(Of Date)
	
	Private _Session As String
	
	Private _Terminal As String
	
	Private _tbl_EmployeeInformation As EntityRef(Of tbl_EmployeeInformation)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnUserIDChanging(value As String)
    End Sub
    Partial Private Sub OnUserIDChanged()
    End Sub
    Partial Private Sub OnDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateChanged()
    End Sub
    Partial Private Sub OnSessionChanging(value As String)
    End Sub
    Partial Private Sub OnSessionChanged()
    End Sub
    Partial Private Sub OnTerminalChanging(value As String)
    End Sub
    Partial Private Sub OnTerminalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tbl_EmployeeInformation = CType(Nothing, EntityRef(Of tbl_EmployeeInformation))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", DbType:="NVarChar(50)")>  _
	Public Property UserID() As String
		Get
			Return Me._UserID
		End Get
		Set
			If (String.Equals(Me._UserID, value) = false) Then
				If Me._tbl_EmployeeInformation.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnUserIDChanging(value)
				Me.SendPropertyChanging
				Me._UserID = value
				Me.SendPropertyChanged("UserID")
				Me.OnUserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Date", Storage:="_Date", DbType:="DateTime")>  _
	Public Property [Date]() As System.Nullable(Of Date)
		Get
			Return Me._Date
		End Get
		Set
			If (Me._Date.Equals(value) = false) Then
				Me.OnDateChanging(value)
				Me.SendPropertyChanging
				Me._Date = value
				Me.SendPropertyChanged("[Date]")
				Me.OnDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Session", DbType:="NVarChar(50)")>  _
	Public Property Session() As String
		Get
			Return Me._Session
		End Get
		Set
			If (String.Equals(Me._Session, value) = false) Then
				Me.OnSessionChanging(value)
				Me.SendPropertyChanging
				Me._Session = value
				Me.SendPropertyChanged("Session")
				Me.OnSessionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Terminal", DbType:="NVarChar(50)")>  _
	Public Property Terminal() As String
		Get
			Return Me._Terminal
		End Get
		Set
			If (String.Equals(Me._Terminal, value) = false) Then
				Me.OnTerminalChanging(value)
				Me.SendPropertyChanging
				Me._Terminal = value
				Me.SendPropertyChanged("Terminal")
				Me.OnTerminalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tbl_EmployeeInformation_tbl_Absent", Storage:="_tbl_EmployeeInformation", ThisKey:="UserID", OtherKey:="EmpID", IsForeignKey:=true, DeleteRule:="CASCADE")>  _
	Public Property tbl_EmployeeInformation() As tbl_EmployeeInformation
		Get
			Return Me._tbl_EmployeeInformation.Entity
		End Get
		Set
			Dim previousValue As tbl_EmployeeInformation = Me._tbl_EmployeeInformation.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._tbl_EmployeeInformation.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._tbl_EmployeeInformation.Entity = Nothing
					previousValue.tbl_Absents.Remove(Me)
				End If
				Me._tbl_EmployeeInformation.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.tbl_Absents.Add(Me)
					Me._UserID = value.EmpID
				Else
					Me._UserID = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("tbl_EmployeeInformation")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbl_EmployeeInformation")>  _
Partial Public Class tbl_EmployeeInformation
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _EmpID As String
	
	Private _ZKNo As String
	
	Private _Fname As String
	
	Private _Mname As String
	
	Private _Lname As String
	
	Private _Extname As String
	
	Private _Bdate As System.Nullable(Of Date)
	
	Private _Bplace As String
	
	Private _Age As System.Nullable(Of Integer)
	
	Private _Gender As String
	
	Private _CStatus As String
	
	Private _Height As String
	
	Private _Religion As String
	
	Private _Street As String
	
	Private _Brgy As String
	
	Private _City As String
	
	Private _CNumber As String
	
	Private _EmpStatus As String
	
	Private _Position As String
	
	Private _DHired As System.Nullable(Of Date)
	
	Private _Department As String
	
	Private _Company As String
	
	Private _SSS As System.Nullable(Of Decimal)
	
	Private _PhilHealth As System.Nullable(Of Decimal)
	
	Private _WTax As System.Nullable(Of Decimal)
	
	Private _Pagibig As System.Nullable(Of Decimal)
	
	Private _Picture As System.Data.Linq.Binary
	
	Private _Rate As System.Nullable(Of Decimal)
	
	Private _Cola As System.Nullable(Of Decimal)
	
	Private _CBond As System.Nullable(Of Decimal)
	
	Private _DAllowance As System.Nullable(Of Decimal)
	
	Private _F2SRemarks As String
	
	Private _F2S As System.Nullable(Of Decimal)
	
	Private _F2SDDeduc As System.Nullable(Of Date)
	
	Private _F2SDEnd As System.Nullable(Of Date)
	
	Private _F2SBalance As System.Nullable(Of Double)
	
	Private _Status As String
	
	Private _BloodType As String
	
	Private _TCBond As System.Nullable(Of Decimal)
	
	Private _AccNo As String
	
	Private _FundAcc As String
	
	Private _SRate As String
	
	Private _Bank As String
	
	Private _Payment As String
	
	Private _Type As String
	
	Private _TimeInAM As String
	
	Private _TimeOutAM As String
	
	Private _TimeInPM As String
	
	Private _TimeOutPM As String
	
	Private _Weekday As System.Nullable(Of Integer)
	
	Private _TimeInAMOther As String
	
	Private _TimeOutAMOther As String
	
	Private _TimeInPMOther As String
	
	Private _TimeOutPMOther As String
	
	Private _Terminals As String
	
	Private _WPayroll As System.Nullable(Of Integer)
	
	Private _IRT As System.Nullable(Of Integer)
	
	Private _SSSRemarks As String
	
	Private _SSSDHired As String
	
	Private _PHICRemarks As String
	
	Private _PHICDHired As String
	
	Private _PrintFlag As String
	
	Private _DaysLeave As System.Nullable(Of Double)
	
	Private _LeaveIssue As String
	
	Private _DateSeparated As System.Nullable(Of Date)
	
	Private _BAssist As System.Nullable(Of Decimal)
	
	Private _WInterval As System.Nullable(Of Integer)
	
	Private _EmpTrailStatus As String
	
	Private _OtherSchedule As System.Nullable(Of Integer)
	
	Private _RestrictIllegalTerminalChange As System.Nullable(Of Integer)
	
	Private _RestrictIllegalCompanyChange As System.Nullable(Of Integer)
	
	Private _IsFlexy As System.Nullable(Of Integer)
	
	Private _IsNoNoonLogs As System.Nullable(Of Integer)
	
	Private _tbl_Absents As EntitySet(Of tbl_Absent)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnEmpIDChanging(value As String)
    End Sub
    Partial Private Sub OnEmpIDChanged()
    End Sub
    Partial Private Sub OnZKNoChanging(value As String)
    End Sub
    Partial Private Sub OnZKNoChanged()
    End Sub
    Partial Private Sub OnFnameChanging(value As String)
    End Sub
    Partial Private Sub OnFnameChanged()
    End Sub
    Partial Private Sub OnMnameChanging(value As String)
    End Sub
    Partial Private Sub OnMnameChanged()
    End Sub
    Partial Private Sub OnLnameChanging(value As String)
    End Sub
    Partial Private Sub OnLnameChanged()
    End Sub
    Partial Private Sub OnExtnameChanging(value As String)
    End Sub
    Partial Private Sub OnExtnameChanged()
    End Sub
    Partial Private Sub OnBdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnBdateChanged()
    End Sub
    Partial Private Sub OnBplaceChanging(value As String)
    End Sub
    Partial Private Sub OnBplaceChanged()
    End Sub
    Partial Private Sub OnAgeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAgeChanged()
    End Sub
    Partial Private Sub OnGenderChanging(value As String)
    End Sub
    Partial Private Sub OnGenderChanged()
    End Sub
    Partial Private Sub OnCStatusChanging(value As String)
    End Sub
    Partial Private Sub OnCStatusChanged()
    End Sub
    Partial Private Sub OnHeightChanging(value As String)
    End Sub
    Partial Private Sub OnHeightChanged()
    End Sub
    Partial Private Sub OnReligionChanging(value As String)
    End Sub
    Partial Private Sub OnReligionChanged()
    End Sub
    Partial Private Sub OnStreetChanging(value As String)
    End Sub
    Partial Private Sub OnStreetChanged()
    End Sub
    Partial Private Sub OnBrgyChanging(value As String)
    End Sub
    Partial Private Sub OnBrgyChanged()
    End Sub
    Partial Private Sub OnCityChanging(value As String)
    End Sub
    Partial Private Sub OnCityChanged()
    End Sub
    Partial Private Sub OnCNumberChanging(value As String)
    End Sub
    Partial Private Sub OnCNumberChanged()
    End Sub
    Partial Private Sub OnEmpStatusChanging(value As String)
    End Sub
    Partial Private Sub OnEmpStatusChanged()
    End Sub
    Partial Private Sub OnPositionChanging(value As String)
    End Sub
    Partial Private Sub OnPositionChanged()
    End Sub
    Partial Private Sub OnDHiredChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDHiredChanged()
    End Sub
    Partial Private Sub OnDepartmentChanging(value As String)
    End Sub
    Partial Private Sub OnDepartmentChanged()
    End Sub
    Partial Private Sub OnCompanyChanging(value As String)
    End Sub
    Partial Private Sub OnCompanyChanged()
    End Sub
    Partial Private Sub OnSSSChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSSSChanged()
    End Sub
    Partial Private Sub OnPhilHealthChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPhilHealthChanged()
    End Sub
    Partial Private Sub OnWTaxChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnWTaxChanged()
    End Sub
    Partial Private Sub OnPagibigChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPagibigChanged()
    End Sub
    Partial Private Sub OnPictureChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnPictureChanged()
    End Sub
    Partial Private Sub OnRateChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnRateChanged()
    End Sub
    Partial Private Sub OnColaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnColaChanged()
    End Sub
    Partial Private Sub OnCBondChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCBondChanged()
    End Sub
    Partial Private Sub OnDAllowanceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDAllowanceChanged()
    End Sub
    Partial Private Sub OnF2SRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnF2SRemarksChanged()
    End Sub
    Partial Private Sub OnF2SChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnF2SChanged()
    End Sub
    Partial Private Sub OnF2SDDeducChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnF2SDDeducChanged()
    End Sub
    Partial Private Sub OnF2SDEndChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnF2SDEndChanged()
    End Sub
    Partial Private Sub OnF2SBalanceChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnF2SBalanceChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As String)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnBloodTypeChanging(value As String)
    End Sub
    Partial Private Sub OnBloodTypeChanged()
    End Sub
    Partial Private Sub OnTCBondChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTCBondChanged()
    End Sub
    Partial Private Sub OnAccNoChanging(value As String)
    End Sub
    Partial Private Sub OnAccNoChanged()
    End Sub
    Partial Private Sub OnFundAccChanging(value As String)
    End Sub
    Partial Private Sub OnFundAccChanged()
    End Sub
    Partial Private Sub OnSRateChanging(value As String)
    End Sub
    Partial Private Sub OnSRateChanged()
    End Sub
    Partial Private Sub OnBankChanging(value As String)
    End Sub
    Partial Private Sub OnBankChanged()
    End Sub
    Partial Private Sub OnPaymentChanging(value As String)
    End Sub
    Partial Private Sub OnPaymentChanged()
    End Sub
    Partial Private Sub OnTypeChanging(value As String)
    End Sub
    Partial Private Sub OnTypeChanged()
    End Sub
    Partial Private Sub OnTimeInAMChanging(value As String)
    End Sub
    Partial Private Sub OnTimeInAMChanged()
    End Sub
    Partial Private Sub OnTimeOutAMChanging(value As String)
    End Sub
    Partial Private Sub OnTimeOutAMChanged()
    End Sub
    Partial Private Sub OnTimeInPMChanging(value As String)
    End Sub
    Partial Private Sub OnTimeInPMChanged()
    End Sub
    Partial Private Sub OnTimeOutPMChanging(value As String)
    End Sub
    Partial Private Sub OnTimeOutPMChanged()
    End Sub
    Partial Private Sub OnWeekdayChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWeekdayChanged()
    End Sub
    Partial Private Sub OnTimeInAMOtherChanging(value As String)
    End Sub
    Partial Private Sub OnTimeInAMOtherChanged()
    End Sub
    Partial Private Sub OnTimeOutAMOtherChanging(value As String)
    End Sub
    Partial Private Sub OnTimeOutAMOtherChanged()
    End Sub
    Partial Private Sub OnTimeInPMOtherChanging(value As String)
    End Sub
    Partial Private Sub OnTimeInPMOtherChanged()
    End Sub
    Partial Private Sub OnTimeOutPMOtherChanging(value As String)
    End Sub
    Partial Private Sub OnTimeOutPMOtherChanged()
    End Sub
    Partial Private Sub OnTerminalsChanging(value As String)
    End Sub
    Partial Private Sub OnTerminalsChanged()
    End Sub
    Partial Private Sub OnWPayrollChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWPayrollChanged()
    End Sub
    Partial Private Sub OnIRTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIRTChanged()
    End Sub
    Partial Private Sub OnSSSRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnSSSRemarksChanged()
    End Sub
    Partial Private Sub OnSSSDHiredChanging(value As String)
    End Sub
    Partial Private Sub OnSSSDHiredChanged()
    End Sub
    Partial Private Sub OnPHICRemarksChanging(value As String)
    End Sub
    Partial Private Sub OnPHICRemarksChanged()
    End Sub
    Partial Private Sub OnPHICDHiredChanging(value As String)
    End Sub
    Partial Private Sub OnPHICDHiredChanged()
    End Sub
    Partial Private Sub OnPrintFlagChanging(value As String)
    End Sub
    Partial Private Sub OnPrintFlagChanged()
    End Sub
    Partial Private Sub OnDaysLeaveChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDaysLeaveChanged()
    End Sub
    Partial Private Sub OnLeaveIssueChanging(value As String)
    End Sub
    Partial Private Sub OnLeaveIssueChanged()
    End Sub
    Partial Private Sub OnDateSeparatedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateSeparatedChanged()
    End Sub
    Partial Private Sub OnBAssistChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnBAssistChanged()
    End Sub
    Partial Private Sub OnWIntervalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWIntervalChanged()
    End Sub
    Partial Private Sub OnEmpTrailStatusChanging(value As String)
    End Sub
    Partial Private Sub OnEmpTrailStatusChanged()
    End Sub
    Partial Private Sub OnOtherScheduleChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOtherScheduleChanged()
    End Sub
    Partial Private Sub OnRestrictIllegalTerminalChangeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRestrictIllegalTerminalChangeChanged()
    End Sub
    Partial Private Sub OnRestrictIllegalCompanyChangeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRestrictIllegalCompanyChangeChanged()
    End Sub
    Partial Private Sub OnIsFlexyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIsFlexyChanged()
    End Sub
    Partial Private Sub OnIsNoNoonLogsChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIsNoNoonLogsChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._tbl_Absents = New EntitySet(Of tbl_Absent)(AddressOf Me.attach_tbl_Absents, AddressOf Me.detach_tbl_Absents)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmpID", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property EmpID() As String
		Get
			Return Me._EmpID
		End Get
		Set
			If (String.Equals(Me._EmpID, value) = false) Then
				Me.OnEmpIDChanging(value)
				Me.SendPropertyChanging
				Me._EmpID = value
				Me.SendPropertyChanged("EmpID")
				Me.OnEmpIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZKNo", DbType:="NVarChar(50)")>  _
	Public Property ZKNo() As String
		Get
			Return Me._ZKNo
		End Get
		Set
			If (String.Equals(Me._ZKNo, value) = false) Then
				Me.OnZKNoChanging(value)
				Me.SendPropertyChanging
				Me._ZKNo = value
				Me.SendPropertyChanged("ZKNo")
				Me.OnZKNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fname", DbType:="NVarChar(50)")>  _
	Public Property Fname() As String
		Get
			Return Me._Fname
		End Get
		Set
			If (String.Equals(Me._Fname, value) = false) Then
				Me.OnFnameChanging(value)
				Me.SendPropertyChanging
				Me._Fname = value
				Me.SendPropertyChanged("Fname")
				Me.OnFnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mname", DbType:="NVarChar(50)")>  _
	Public Property Mname() As String
		Get
			Return Me._Mname
		End Get
		Set
			If (String.Equals(Me._Mname, value) = false) Then
				Me.OnMnameChanging(value)
				Me.SendPropertyChanging
				Me._Mname = value
				Me.SendPropertyChanged("Mname")
				Me.OnMnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lname", DbType:="NVarChar(50)")>  _
	Public Property Lname() As String
		Get
			Return Me._Lname
		End Get
		Set
			If (String.Equals(Me._Lname, value) = false) Then
				Me.OnLnameChanging(value)
				Me.SendPropertyChanging
				Me._Lname = value
				Me.SendPropertyChanged("Lname")
				Me.OnLnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Extname", DbType:="NVarChar(50)")>  _
	Public Property Extname() As String
		Get
			Return Me._Extname
		End Get
		Set
			If (String.Equals(Me._Extname, value) = false) Then
				Me.OnExtnameChanging(value)
				Me.SendPropertyChanging
				Me._Extname = value
				Me.SendPropertyChanged("Extname")
				Me.OnExtnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bdate", DbType:="DateTime")>  _
	Public Property Bdate() As System.Nullable(Of Date)
		Get
			Return Me._Bdate
		End Get
		Set
			If (Me._Bdate.Equals(value) = false) Then
				Me.OnBdateChanging(value)
				Me.SendPropertyChanging
				Me._Bdate = value
				Me.SendPropertyChanged("Bdate")
				Me.OnBdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bplace", DbType:="NVarChar(50)")>  _
	Public Property Bplace() As String
		Get
			Return Me._Bplace
		End Get
		Set
			If (String.Equals(Me._Bplace, value) = false) Then
				Me.OnBplaceChanging(value)
				Me.SendPropertyChanging
				Me._Bplace = value
				Me.SendPropertyChanged("Bplace")
				Me.OnBplaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Age", DbType:="Int")>  _
	Public Property Age() As System.Nullable(Of Integer)
		Get
			Return Me._Age
		End Get
		Set
			If (Me._Age.Equals(value) = false) Then
				Me.OnAgeChanging(value)
				Me.SendPropertyChanging
				Me._Age = value
				Me.SendPropertyChanged("Age")
				Me.OnAgeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Gender", DbType:="NVarChar(50)")>  _
	Public Property Gender() As String
		Get
			Return Me._Gender
		End Get
		Set
			If (String.Equals(Me._Gender, value) = false) Then
				Me.OnGenderChanging(value)
				Me.SendPropertyChanging
				Me._Gender = value
				Me.SendPropertyChanged("Gender")
				Me.OnGenderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CStatus", DbType:="NVarChar(50)")>  _
	Public Property CStatus() As String
		Get
			Return Me._CStatus
		End Get
		Set
			If (String.Equals(Me._CStatus, value) = false) Then
				Me.OnCStatusChanging(value)
				Me.SendPropertyChanging
				Me._CStatus = value
				Me.SendPropertyChanged("CStatus")
				Me.OnCStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Height", DbType:="NVarChar(50)")>  _
	Public Property Height() As String
		Get
			Return Me._Height
		End Get
		Set
			If (String.Equals(Me._Height, value) = false) Then
				Me.OnHeightChanging(value)
				Me.SendPropertyChanging
				Me._Height = value
				Me.SendPropertyChanged("Height")
				Me.OnHeightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Religion", DbType:="NVarChar(50)")>  _
	Public Property Religion() As String
		Get
			Return Me._Religion
		End Get
		Set
			If (String.Equals(Me._Religion, value) = false) Then
				Me.OnReligionChanging(value)
				Me.SendPropertyChanging
				Me._Religion = value
				Me.SendPropertyChanged("Religion")
				Me.OnReligionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Street", DbType:="NVarChar(50)")>  _
	Public Property Street() As String
		Get
			Return Me._Street
		End Get
		Set
			If (String.Equals(Me._Street, value) = false) Then
				Me.OnStreetChanging(value)
				Me.SendPropertyChanging
				Me._Street = value
				Me.SendPropertyChanged("Street")
				Me.OnStreetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Brgy", DbType:="NVarChar(50)")>  _
	Public Property Brgy() As String
		Get
			Return Me._Brgy
		End Get
		Set
			If (String.Equals(Me._Brgy, value) = false) Then
				Me.OnBrgyChanging(value)
				Me.SendPropertyChanging
				Me._Brgy = value
				Me.SendPropertyChanged("Brgy")
				Me.OnBrgyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_City", DbType:="NVarChar(50)")>  _
	Public Property City() As String
		Get
			Return Me._City
		End Get
		Set
			If (String.Equals(Me._City, value) = false) Then
				Me.OnCityChanging(value)
				Me.SendPropertyChanging
				Me._City = value
				Me.SendPropertyChanged("City")
				Me.OnCityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNumber", DbType:="NVarChar(50)")>  _
	Public Property CNumber() As String
		Get
			Return Me._CNumber
		End Get
		Set
			If (String.Equals(Me._CNumber, value) = false) Then
				Me.OnCNumberChanging(value)
				Me.SendPropertyChanging
				Me._CNumber = value
				Me.SendPropertyChanged("CNumber")
				Me.OnCNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmpStatus", DbType:="NVarChar(50)")>  _
	Public Property EmpStatus() As String
		Get
			Return Me._EmpStatus
		End Get
		Set
			If (String.Equals(Me._EmpStatus, value) = false) Then
				Me.OnEmpStatusChanging(value)
				Me.SendPropertyChanging
				Me._EmpStatus = value
				Me.SendPropertyChanged("EmpStatus")
				Me.OnEmpStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Position", DbType:="NVarChar(50)")>  _
	Public Property Position() As String
		Get
			Return Me._Position
		End Get
		Set
			If (String.Equals(Me._Position, value) = false) Then
				Me.OnPositionChanging(value)
				Me.SendPropertyChanging
				Me._Position = value
				Me.SendPropertyChanged("Position")
				Me.OnPositionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DHired", DbType:="DateTime")>  _
	Public Property DHired() As System.Nullable(Of Date)
		Get
			Return Me._DHired
		End Get
		Set
			If (Me._DHired.Equals(value) = false) Then
				Me.OnDHiredChanging(value)
				Me.SendPropertyChanging
				Me._DHired = value
				Me.SendPropertyChanged("DHired")
				Me.OnDHiredChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department", DbType:="NVarChar(2000)")>  _
	Public Property Department() As String
		Get
			Return Me._Department
		End Get
		Set
			If (String.Equals(Me._Department, value) = false) Then
				Me.OnDepartmentChanging(value)
				Me.SendPropertyChanging
				Me._Department = value
				Me.SendPropertyChanged("Department")
				Me.OnDepartmentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Company", DbType:="NVarChar(2000)")>  _
	Public Property Company() As String
		Get
			Return Me._Company
		End Get
		Set
			If (String.Equals(Me._Company, value) = false) Then
				Me.OnCompanyChanging(value)
				Me.SendPropertyChanging
				Me._Company = value
				Me.SendPropertyChanged("Company")
				Me.OnCompanyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SSS", DbType:="Money")>  _
	Public Property SSS() As System.Nullable(Of Decimal)
		Get
			Return Me._SSS
		End Get
		Set
			If (Me._SSS.Equals(value) = false) Then
				Me.OnSSSChanging(value)
				Me.SendPropertyChanging
				Me._SSS = value
				Me.SendPropertyChanged("SSS")
				Me.OnSSSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhilHealth", DbType:="Money")>  _
	Public Property PhilHealth() As System.Nullable(Of Decimal)
		Get
			Return Me._PhilHealth
		End Get
		Set
			If (Me._PhilHealth.Equals(value) = false) Then
				Me.OnPhilHealthChanging(value)
				Me.SendPropertyChanging
				Me._PhilHealth = value
				Me.SendPropertyChanged("PhilHealth")
				Me.OnPhilHealthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WTax", DbType:="Money")>  _
	Public Property WTax() As System.Nullable(Of Decimal)
		Get
			Return Me._WTax
		End Get
		Set
			If (Me._WTax.Equals(value) = false) Then
				Me.OnWTaxChanging(value)
				Me.SendPropertyChanging
				Me._WTax = value
				Me.SendPropertyChanged("WTax")
				Me.OnWTaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pagibig", DbType:="Money")>  _
	Public Property Pagibig() As System.Nullable(Of Decimal)
		Get
			Return Me._Pagibig
		End Get
		Set
			If (Me._Pagibig.Equals(value) = false) Then
				Me.OnPagibigChanging(value)
				Me.SendPropertyChanging
				Me._Pagibig = value
				Me.SendPropertyChanged("Pagibig")
				Me.OnPagibigChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Picture", DbType:="Image", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Picture() As System.Data.Linq.Binary
		Get
			Return Me._Picture
		End Get
		Set
			If (Object.Equals(Me._Picture, value) = false) Then
				Me.OnPictureChanging(value)
				Me.SendPropertyChanging
				Me._Picture = value
				Me.SendPropertyChanged("Picture")
				Me.OnPictureChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rate", DbType:="Money")>  _
	Public Property Rate() As System.Nullable(Of Decimal)
		Get
			Return Me._Rate
		End Get
		Set
			If (Me._Rate.Equals(value) = false) Then
				Me.OnRateChanging(value)
				Me.SendPropertyChanging
				Me._Rate = value
				Me.SendPropertyChanged("Rate")
				Me.OnRateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cola", DbType:="Money")>  _
	Public Property Cola() As System.Nullable(Of Decimal)
		Get
			Return Me._Cola
		End Get
		Set
			If (Me._Cola.Equals(value) = false) Then
				Me.OnColaChanging(value)
				Me.SendPropertyChanging
				Me._Cola = value
				Me.SendPropertyChanged("Cola")
				Me.OnColaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBond", DbType:="Money")>  _
	Public Property CBond() As System.Nullable(Of Decimal)
		Get
			Return Me._CBond
		End Get
		Set
			If (Me._CBond.Equals(value) = false) Then
				Me.OnCBondChanging(value)
				Me.SendPropertyChanging
				Me._CBond = value
				Me.SendPropertyChanged("CBond")
				Me.OnCBondChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DAllowance", DbType:="Money")>  _
	Public Property DAllowance() As System.Nullable(Of Decimal)
		Get
			Return Me._DAllowance
		End Get
		Set
			If (Me._DAllowance.Equals(value) = false) Then
				Me.OnDAllowanceChanging(value)
				Me.SendPropertyChanging
				Me._DAllowance = value
				Me.SendPropertyChanged("DAllowance")
				Me.OnDAllowanceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_F2SRemarks", DbType:="NVarChar(50)")>  _
	Public Property F2SRemarks() As String
		Get
			Return Me._F2SRemarks
		End Get
		Set
			If (String.Equals(Me._F2SRemarks, value) = false) Then
				Me.OnF2SRemarksChanging(value)
				Me.SendPropertyChanging
				Me._F2SRemarks = value
				Me.SendPropertyChanged("F2SRemarks")
				Me.OnF2SRemarksChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_F2S", DbType:="Money")>  _
	Public Property F2S() As System.Nullable(Of Decimal)
		Get
			Return Me._F2S
		End Get
		Set
			If (Me._F2S.Equals(value) = false) Then
				Me.OnF2SChanging(value)
				Me.SendPropertyChanging
				Me._F2S = value
				Me.SendPropertyChanged("F2S")
				Me.OnF2SChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_F2SDDeduc", DbType:="DateTime")>  _
	Public Property F2SDDeduc() As System.Nullable(Of Date)
		Get
			Return Me._F2SDDeduc
		End Get
		Set
			If (Me._F2SDDeduc.Equals(value) = false) Then
				Me.OnF2SDDeducChanging(value)
				Me.SendPropertyChanging
				Me._F2SDDeduc = value
				Me.SendPropertyChanged("F2SDDeduc")
				Me.OnF2SDDeducChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_F2SDEnd", DbType:="DateTime")>  _
	Public Property F2SDEnd() As System.Nullable(Of Date)
		Get
			Return Me._F2SDEnd
		End Get
		Set
			If (Me._F2SDEnd.Equals(value) = false) Then
				Me.OnF2SDEndChanging(value)
				Me.SendPropertyChanging
				Me._F2SDEnd = value
				Me.SendPropertyChanged("F2SDEnd")
				Me.OnF2SDEndChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_F2SBalance", DbType:="Float")>  _
	Public Property F2SBalance() As System.Nullable(Of Double)
		Get
			Return Me._F2SBalance
		End Get
		Set
			If (Me._F2SBalance.Equals(value) = false) Then
				Me.OnF2SBalanceChanging(value)
				Me.SendPropertyChanging
				Me._F2SBalance = value
				Me.SendPropertyChanged("F2SBalance")
				Me.OnF2SBalanceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="NVarChar(50)")>  _
	Public Property Status() As String
		Get
			Return Me._Status
		End Get
		Set
			If (String.Equals(Me._Status, value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BloodType", DbType:="NVarChar(50)")>  _
	Public Property BloodType() As String
		Get
			Return Me._BloodType
		End Get
		Set
			If (String.Equals(Me._BloodType, value) = false) Then
				Me.OnBloodTypeChanging(value)
				Me.SendPropertyChanging
				Me._BloodType = value
				Me.SendPropertyChanged("BloodType")
				Me.OnBloodTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TCBond", DbType:="Money")>  _
	Public Property TCBond() As System.Nullable(Of Decimal)
		Get
			Return Me._TCBond
		End Get
		Set
			If (Me._TCBond.Equals(value) = false) Then
				Me.OnTCBondChanging(value)
				Me.SendPropertyChanging
				Me._TCBond = value
				Me.SendPropertyChanged("TCBond")
				Me.OnTCBondChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccNo", DbType:="NVarChar(50)")>  _
	Public Property AccNo() As String
		Get
			Return Me._AccNo
		End Get
		Set
			If (String.Equals(Me._AccNo, value) = false) Then
				Me.OnAccNoChanging(value)
				Me.SendPropertyChanging
				Me._AccNo = value
				Me.SendPropertyChanged("AccNo")
				Me.OnAccNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FundAcc", DbType:="NVarChar(50)")>  _
	Public Property FundAcc() As String
		Get
			Return Me._FundAcc
		End Get
		Set
			If (String.Equals(Me._FundAcc, value) = false) Then
				Me.OnFundAccChanging(value)
				Me.SendPropertyChanging
				Me._FundAcc = value
				Me.SendPropertyChanged("FundAcc")
				Me.OnFundAccChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SRate", DbType:="NVarChar(50)")>  _
	Public Property SRate() As String
		Get
			Return Me._SRate
		End Get
		Set
			If (String.Equals(Me._SRate, value) = false) Then
				Me.OnSRateChanging(value)
				Me.SendPropertyChanging
				Me._SRate = value
				Me.SendPropertyChanged("SRate")
				Me.OnSRateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bank", DbType:="NVarChar(50)")>  _
	Public Property Bank() As String
		Get
			Return Me._Bank
		End Get
		Set
			If (String.Equals(Me._Bank, value) = false) Then
				Me.OnBankChanging(value)
				Me.SendPropertyChanging
				Me._Bank = value
				Me.SendPropertyChanged("Bank")
				Me.OnBankChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Payment", DbType:="NVarChar(50)")>  _
	Public Property Payment() As String
		Get
			Return Me._Payment
		End Get
		Set
			If (String.Equals(Me._Payment, value) = false) Then
				Me.OnPaymentChanging(value)
				Me.SendPropertyChanging
				Me._Payment = value
				Me.SendPropertyChanged("Payment")
				Me.OnPaymentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Type", DbType:="NVarChar(50)")>  _
	Public Property Type() As String
		Get
			Return Me._Type
		End Get
		Set
			If (String.Equals(Me._Type, value) = false) Then
				Me.OnTypeChanging(value)
				Me.SendPropertyChanging
				Me._Type = value
				Me.SendPropertyChanged("Type")
				Me.OnTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TimeInAM", DbType:="NVarChar(50)")>  _
	Public Property TimeInAM() As String
		Get
			Return Me._TimeInAM
		End Get
		Set
			If (String.Equals(Me._TimeInAM, value) = false) Then
				Me.OnTimeInAMChanging(value)
				Me.SendPropertyChanging
				Me._TimeInAM = value
				Me.SendPropertyChanged("TimeInAM")
				Me.OnTimeInAMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TimeOutAM", DbType:="NVarChar(50)")>  _
	Public Property TimeOutAM() As String
		Get
			Return Me._TimeOutAM
		End Get
		Set
			If (String.Equals(Me._TimeOutAM, value) = false) Then
				Me.OnTimeOutAMChanging(value)
				Me.SendPropertyChanging
				Me._TimeOutAM = value
				Me.SendPropertyChanged("TimeOutAM")
				Me.OnTimeOutAMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TimeInPM", DbType:="NVarChar(50)")>  _
	Public Property TimeInPM() As String
		Get
			Return Me._TimeInPM
		End Get
		Set
			If (String.Equals(Me._TimeInPM, value) = false) Then
				Me.OnTimeInPMChanging(value)
				Me.SendPropertyChanging
				Me._TimeInPM = value
				Me.SendPropertyChanged("TimeInPM")
				Me.OnTimeInPMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TimeOutPM", DbType:="NVarChar(50)")>  _
	Public Property TimeOutPM() As String
		Get
			Return Me._TimeOutPM
		End Get
		Set
			If (String.Equals(Me._TimeOutPM, value) = false) Then
				Me.OnTimeOutPMChanging(value)
				Me.SendPropertyChanging
				Me._TimeOutPM = value
				Me.SendPropertyChanged("TimeOutPM")
				Me.OnTimeOutPMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Weekday", DbType:="Int")>  _
	Public Property Weekday() As System.Nullable(Of Integer)
		Get
			Return Me._Weekday
		End Get
		Set
			If (Me._Weekday.Equals(value) = false) Then
				Me.OnWeekdayChanging(value)
				Me.SendPropertyChanging
				Me._Weekday = value
				Me.SendPropertyChanged("Weekday")
				Me.OnWeekdayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TimeInAMOther", DbType:="NVarChar(50)")>  _
	Public Property TimeInAMOther() As String
		Get
			Return Me._TimeInAMOther
		End Get
		Set
			If (String.Equals(Me._TimeInAMOther, value) = false) Then
				Me.OnTimeInAMOtherChanging(value)
				Me.SendPropertyChanging
				Me._TimeInAMOther = value
				Me.SendPropertyChanged("TimeInAMOther")
				Me.OnTimeInAMOtherChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TimeOutAMOther", DbType:="NVarChar(50)")>  _
	Public Property TimeOutAMOther() As String
		Get
			Return Me._TimeOutAMOther
		End Get
		Set
			If (String.Equals(Me._TimeOutAMOther, value) = false) Then
				Me.OnTimeOutAMOtherChanging(value)
				Me.SendPropertyChanging
				Me._TimeOutAMOther = value
				Me.SendPropertyChanged("TimeOutAMOther")
				Me.OnTimeOutAMOtherChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TimeInPMOther", DbType:="NVarChar(50)")>  _
	Public Property TimeInPMOther() As String
		Get
			Return Me._TimeInPMOther
		End Get
		Set
			If (String.Equals(Me._TimeInPMOther, value) = false) Then
				Me.OnTimeInPMOtherChanging(value)
				Me.SendPropertyChanging
				Me._TimeInPMOther = value
				Me.SendPropertyChanged("TimeInPMOther")
				Me.OnTimeInPMOtherChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TimeOutPMOther", DbType:="NVarChar(50)")>  _
	Public Property TimeOutPMOther() As String
		Get
			Return Me._TimeOutPMOther
		End Get
		Set
			If (String.Equals(Me._TimeOutPMOther, value) = false) Then
				Me.OnTimeOutPMOtherChanging(value)
				Me.SendPropertyChanging
				Me._TimeOutPMOther = value
				Me.SendPropertyChanged("TimeOutPMOther")
				Me.OnTimeOutPMOtherChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Terminals", DbType:="NVarChar(50)")>  _
	Public Property Terminals() As String
		Get
			Return Me._Terminals
		End Get
		Set
			If (String.Equals(Me._Terminals, value) = false) Then
				Me.OnTerminalsChanging(value)
				Me.SendPropertyChanging
				Me._Terminals = value
				Me.SendPropertyChanged("Terminals")
				Me.OnTerminalsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WPayroll", DbType:="Int")>  _
	Public Property WPayroll() As System.Nullable(Of Integer)
		Get
			Return Me._WPayroll
		End Get
		Set
			If (Me._WPayroll.Equals(value) = false) Then
				Me.OnWPayrollChanging(value)
				Me.SendPropertyChanging
				Me._WPayroll = value
				Me.SendPropertyChanged("WPayroll")
				Me.OnWPayrollChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IRT", DbType:="Int")>  _
	Public Property IRT() As System.Nullable(Of Integer)
		Get
			Return Me._IRT
		End Get
		Set
			If (Me._IRT.Equals(value) = false) Then
				Me.OnIRTChanging(value)
				Me.SendPropertyChanging
				Me._IRT = value
				Me.SendPropertyChanged("IRT")
				Me.OnIRTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SSSRemarks", DbType:="NVarChar(50)")>  _
	Public Property SSSRemarks() As String
		Get
			Return Me._SSSRemarks
		End Get
		Set
			If (String.Equals(Me._SSSRemarks, value) = false) Then
				Me.OnSSSRemarksChanging(value)
				Me.SendPropertyChanging
				Me._SSSRemarks = value
				Me.SendPropertyChanged("SSSRemarks")
				Me.OnSSSRemarksChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SSSDHired", DbType:="NVarChar(50)")>  _
	Public Property SSSDHired() As String
		Get
			Return Me._SSSDHired
		End Get
		Set
			If (String.Equals(Me._SSSDHired, value) = false) Then
				Me.OnSSSDHiredChanging(value)
				Me.SendPropertyChanging
				Me._SSSDHired = value
				Me.SendPropertyChanged("SSSDHired")
				Me.OnSSSDHiredChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHICRemarks", DbType:="NVarChar(50)")>  _
	Public Property PHICRemarks() As String
		Get
			Return Me._PHICRemarks
		End Get
		Set
			If (String.Equals(Me._PHICRemarks, value) = false) Then
				Me.OnPHICRemarksChanging(value)
				Me.SendPropertyChanging
				Me._PHICRemarks = value
				Me.SendPropertyChanged("PHICRemarks")
				Me.OnPHICRemarksChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHICDHired", DbType:="NVarChar(50)")>  _
	Public Property PHICDHired() As String
		Get
			Return Me._PHICDHired
		End Get
		Set
			If (String.Equals(Me._PHICDHired, value) = false) Then
				Me.OnPHICDHiredChanging(value)
				Me.SendPropertyChanging
				Me._PHICDHired = value
				Me.SendPropertyChanged("PHICDHired")
				Me.OnPHICDHiredChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrintFlag", DbType:="NChar(10)")>  _
	Public Property PrintFlag() As String
		Get
			Return Me._PrintFlag
		End Get
		Set
			If (String.Equals(Me._PrintFlag, value) = false) Then
				Me.OnPrintFlagChanging(value)
				Me.SendPropertyChanging
				Me._PrintFlag = value
				Me.SendPropertyChanged("PrintFlag")
				Me.OnPrintFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DaysLeave", DbType:="Float")>  _
	Public Property DaysLeave() As System.Nullable(Of Double)
		Get
			Return Me._DaysLeave
		End Get
		Set
			If (Me._DaysLeave.Equals(value) = false) Then
				Me.OnDaysLeaveChanging(value)
				Me.SendPropertyChanging
				Me._DaysLeave = value
				Me.SendPropertyChanged("DaysLeave")
				Me.OnDaysLeaveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LeaveIssue", DbType:="NChar(10)")>  _
	Public Property LeaveIssue() As String
		Get
			Return Me._LeaveIssue
		End Get
		Set
			If (String.Equals(Me._LeaveIssue, value) = false) Then
				Me.OnLeaveIssueChanging(value)
				Me.SendPropertyChanging
				Me._LeaveIssue = value
				Me.SendPropertyChanged("LeaveIssue")
				Me.OnLeaveIssueChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateSeparated", DbType:="DateTime")>  _
	Public Property DateSeparated() As System.Nullable(Of Date)
		Get
			Return Me._DateSeparated
		End Get
		Set
			If (Me._DateSeparated.Equals(value) = false) Then
				Me.OnDateSeparatedChanging(value)
				Me.SendPropertyChanging
				Me._DateSeparated = value
				Me.SendPropertyChanged("DateSeparated")
				Me.OnDateSeparatedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BAssist", DbType:="Money")>  _
	Public Property BAssist() As System.Nullable(Of Decimal)
		Get
			Return Me._BAssist
		End Get
		Set
			If (Me._BAssist.Equals(value) = false) Then
				Me.OnBAssistChanging(value)
				Me.SendPropertyChanging
				Me._BAssist = value
				Me.SendPropertyChanged("BAssist")
				Me.OnBAssistChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WInterval", DbType:="Int")>  _
	Public Property WInterval() As System.Nullable(Of Integer)
		Get
			Return Me._WInterval
		End Get
		Set
			If (Me._WInterval.Equals(value) = false) Then
				Me.OnWIntervalChanging(value)
				Me.SendPropertyChanging
				Me._WInterval = value
				Me.SendPropertyChanged("WInterval")
				Me.OnWIntervalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmpTrailStatus", DbType:="NChar(10)")>  _
	Public Property EmpTrailStatus() As String
		Get
			Return Me._EmpTrailStatus
		End Get
		Set
			If (String.Equals(Me._EmpTrailStatus, value) = false) Then
				Me.OnEmpTrailStatusChanging(value)
				Me.SendPropertyChanging
				Me._EmpTrailStatus = value
				Me.SendPropertyChanged("EmpTrailStatus")
				Me.OnEmpTrailStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OtherSchedule", DbType:="Int")>  _
	Public Property OtherSchedule() As System.Nullable(Of Integer)
		Get
			Return Me._OtherSchedule
		End Get
		Set
			If (Me._OtherSchedule.Equals(value) = false) Then
				Me.OnOtherScheduleChanging(value)
				Me.SendPropertyChanging
				Me._OtherSchedule = value
				Me.SendPropertyChanged("OtherSchedule")
				Me.OnOtherScheduleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RestrictIllegalTerminalChange", DbType:="Int")>  _
	Public Property RestrictIllegalTerminalChange() As System.Nullable(Of Integer)
		Get
			Return Me._RestrictIllegalTerminalChange
		End Get
		Set
			If (Me._RestrictIllegalTerminalChange.Equals(value) = false) Then
				Me.OnRestrictIllegalTerminalChangeChanging(value)
				Me.SendPropertyChanging
				Me._RestrictIllegalTerminalChange = value
				Me.SendPropertyChanged("RestrictIllegalTerminalChange")
				Me.OnRestrictIllegalTerminalChangeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RestrictIllegalCompanyChange", DbType:="Int")>  _
	Public Property RestrictIllegalCompanyChange() As System.Nullable(Of Integer)
		Get
			Return Me._RestrictIllegalCompanyChange
		End Get
		Set
			If (Me._RestrictIllegalCompanyChange.Equals(value) = false) Then
				Me.OnRestrictIllegalCompanyChangeChanging(value)
				Me.SendPropertyChanging
				Me._RestrictIllegalCompanyChange = value
				Me.SendPropertyChanged("RestrictIllegalCompanyChange")
				Me.OnRestrictIllegalCompanyChangeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsFlexy", DbType:="Int")>  _
	Public Property IsFlexy() As System.Nullable(Of Integer)
		Get
			Return Me._IsFlexy
		End Get
		Set
			If (Me._IsFlexy.Equals(value) = false) Then
				Me.OnIsFlexyChanging(value)
				Me.SendPropertyChanging
				Me._IsFlexy = value
				Me.SendPropertyChanged("IsFlexy")
				Me.OnIsFlexyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsNoNoonLogs", DbType:="Int")>  _
	Public Property IsNoNoonLogs() As System.Nullable(Of Integer)
		Get
			Return Me._IsNoNoonLogs
		End Get
		Set
			If (Me._IsNoNoonLogs.Equals(value) = false) Then
				Me.OnIsNoNoonLogsChanging(value)
				Me.SendPropertyChanging
				Me._IsNoNoonLogs = value
				Me.SendPropertyChanged("IsNoNoonLogs")
				Me.OnIsNoNoonLogsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="tbl_EmployeeInformation_tbl_Absent", Storage:="_tbl_Absents", ThisKey:="EmpID", OtherKey:="UserID")>  _
	Public Property tbl_Absents() As EntitySet(Of tbl_Absent)
		Get
			Return Me._tbl_Absents
		End Get
		Set
			Me._tbl_Absents.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_tbl_Absents(ByVal entity As tbl_Absent)
		Me.SendPropertyChanging
		entity.tbl_EmployeeInformation = Me
	End Sub
	
	Private Sub detach_tbl_Absents(ByVal entity As tbl_Absent)
		Me.SendPropertyChanging
		entity.tbl_EmployeeInformation = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbl_Payroll")>  _
Partial Public Class tbl_Payroll
	
	Private _EmpID As String
	
	Private _Name As String
	
	Private _Position As String
	
	Private _Department As String
	
	Private _Company As String
	
	Private _RatePD As System.Nullable(Of Decimal)
	
	Private _ColaPD As System.Nullable(Of Decimal)
	
	Private _NOD As System.Nullable(Of Double)
	
	Private _Holiday As System.Nullable(Of Decimal)
	
	Private _Cola As System.Nullable(Of Decimal)
	
	Private _Rate As System.Nullable(Of Decimal)
	
	Private _Overtime As System.Nullable(Of Decimal)
	
	Private _SOthers As System.Nullable(Of Decimal)
	
	Private _SSSRate As System.Nullable(Of Decimal)
	
	Private _SSS As System.Nullable(Of Decimal)
	
	Private _PhilRate As System.Nullable(Of Decimal)
	
	Private _PhilHealth As System.Nullable(Of Decimal)
	
	Private _WTax As System.Nullable(Of Decimal)
	
	Private _PagibigRate As System.Nullable(Of Decimal)
	
	Private _Pagibig As System.Nullable(Of Decimal)
	
	Private _F2SRate As System.Nullable(Of Decimal)
	
	Private _F2S As System.Nullable(Of Decimal)
	
	Private _SSSLoan As System.Nullable(Of Decimal)
	
	Private _PLoan As System.Nullable(Of Decimal)
	
	Private _CBond As System.Nullable(Of Decimal)
	
	Private _Late As System.Nullable(Of Decimal)
	
	Private _Undertime As System.Nullable(Of Decimal)
	
	Private _COOP As System.Nullable(Of Decimal)
	
	Private _Vale As System.Nullable(Of Decimal)
	
	Private _OD As System.Nullable(Of Decimal)
	
	Private _DOthers As System.Nullable(Of Decimal)
	
	Private _TSalary As System.Nullable(Of Decimal)
	
	Private _TDeduction As System.Nullable(Of Decimal)
	
	Private _Net As System.Nullable(Of Decimal)
	
	Private _PeriodFrom As System.Nullable(Of Date)
	
	Private _PeriodTo As System.Nullable(Of Date)
	
	Private _ValeB As System.Nullable(Of Decimal)
	
	Private _COOPB As System.Nullable(Of Decimal)
	
	Private _OthersB As System.Nullable(Of Decimal)
	
	Private _SSSB As System.Nullable(Of Decimal)
	
	Private _PagibigB As System.Nullable(Of Decimal)
	
	Private _ODB As System.Nullable(Of Decimal)
	
	Private _F2SB As System.Nullable(Of Decimal)
	
	Private _CalamityLoan As System.Nullable(Of Decimal)
	
	Private _CalamityB As System.Nullable(Of Decimal)
	
	Private _NightDiff As System.Nullable(Of Decimal)
	
	Private _CalamityLoanSSS As System.Nullable(Of Decimal)
	
	Private _CalamitySSSB As System.Nullable(Of Decimal)
	
	Private _IsPaygen As System.Nullable(Of Integer)
	
	Private _SSSMonthly As System.Nullable(Of Decimal)
	
	Private _PagibigMonthly As System.Nullable(Of Decimal)
	
	Private _PhilHealthMonthly As System.Nullable(Of Decimal)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmpID", DbType:="NVarChar(50)")>  _
	Public Property EmpID() As String
		Get
			Return Me._EmpID
		End Get
		Set
			If (String.Equals(Me._EmpID, value) = false) Then
				Me._EmpID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(2000)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Position", DbType:="NVarChar(2000)")>  _
	Public Property Position() As String
		Get
			Return Me._Position
		End Get
		Set
			If (String.Equals(Me._Position, value) = false) Then
				Me._Position = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department", DbType:="NVarChar(2000)")>  _
	Public Property Department() As String
		Get
			Return Me._Department
		End Get
		Set
			If (String.Equals(Me._Department, value) = false) Then
				Me._Department = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Company", DbType:="NVarChar(2000)")>  _
	Public Property Company() As String
		Get
			Return Me._Company
		End Get
		Set
			If (String.Equals(Me._Company, value) = false) Then
				Me._Company = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RatePD", DbType:="Money")>  _
	Public Property RatePD() As System.Nullable(Of Decimal)
		Get
			Return Me._RatePD
		End Get
		Set
			If (Me._RatePD.Equals(value) = false) Then
				Me._RatePD = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ColaPD", DbType:="Money")>  _
	Public Property ColaPD() As System.Nullable(Of Decimal)
		Get
			Return Me._ColaPD
		End Get
		Set
			If (Me._ColaPD.Equals(value) = false) Then
				Me._ColaPD = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NOD", DbType:="Float")>  _
	Public Property NOD() As System.Nullable(Of Double)
		Get
			Return Me._NOD
		End Get
		Set
			If (Me._NOD.Equals(value) = false) Then
				Me._NOD = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Holiday", DbType:="Money")>  _
	Public Property Holiday() As System.Nullable(Of Decimal)
		Get
			Return Me._Holiday
		End Get
		Set
			If (Me._Holiday.Equals(value) = false) Then
				Me._Holiday = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cola", DbType:="Money")>  _
	Public Property Cola() As System.Nullable(Of Decimal)
		Get
			Return Me._Cola
		End Get
		Set
			If (Me._Cola.Equals(value) = false) Then
				Me._Cola = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rate", DbType:="Money")>  _
	Public Property Rate() As System.Nullable(Of Decimal)
		Get
			Return Me._Rate
		End Get
		Set
			If (Me._Rate.Equals(value) = false) Then
				Me._Rate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Overtime", DbType:="Money")>  _
	Public Property Overtime() As System.Nullable(Of Decimal)
		Get
			Return Me._Overtime
		End Get
		Set
			If (Me._Overtime.Equals(value) = false) Then
				Me._Overtime = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOthers", DbType:="Money")>  _
	Public Property SOthers() As System.Nullable(Of Decimal)
		Get
			Return Me._SOthers
		End Get
		Set
			If (Me._SOthers.Equals(value) = false) Then
				Me._SOthers = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SSSRate", DbType:="Money")>  _
	Public Property SSSRate() As System.Nullable(Of Decimal)
		Get
			Return Me._SSSRate
		End Get
		Set
			If (Me._SSSRate.Equals(value) = false) Then
				Me._SSSRate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SSS", DbType:="Money")>  _
	Public Property SSS() As System.Nullable(Of Decimal)
		Get
			Return Me._SSS
		End Get
		Set
			If (Me._SSS.Equals(value) = false) Then
				Me._SSS = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhilRate", DbType:="Money")>  _
	Public Property PhilRate() As System.Nullable(Of Decimal)
		Get
			Return Me._PhilRate
		End Get
		Set
			If (Me._PhilRate.Equals(value) = false) Then
				Me._PhilRate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhilHealth", DbType:="Money")>  _
	Public Property PhilHealth() As System.Nullable(Of Decimal)
		Get
			Return Me._PhilHealth
		End Get
		Set
			If (Me._PhilHealth.Equals(value) = false) Then
				Me._PhilHealth = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WTax", DbType:="Money")>  _
	Public Property WTax() As System.Nullable(Of Decimal)
		Get
			Return Me._WTax
		End Get
		Set
			If (Me._WTax.Equals(value) = false) Then
				Me._WTax = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PagibigRate", DbType:="Money")>  _
	Public Property PagibigRate() As System.Nullable(Of Decimal)
		Get
			Return Me._PagibigRate
		End Get
		Set
			If (Me._PagibigRate.Equals(value) = false) Then
				Me._PagibigRate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pagibig", DbType:="Money")>  _
	Public Property Pagibig() As System.Nullable(Of Decimal)
		Get
			Return Me._Pagibig
		End Get
		Set
			If (Me._Pagibig.Equals(value) = false) Then
				Me._Pagibig = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_F2SRate", DbType:="Money")>  _
	Public Property F2SRate() As System.Nullable(Of Decimal)
		Get
			Return Me._F2SRate
		End Get
		Set
			If (Me._F2SRate.Equals(value) = false) Then
				Me._F2SRate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_F2S", DbType:="Money")>  _
	Public Property F2S() As System.Nullable(Of Decimal)
		Get
			Return Me._F2S
		End Get
		Set
			If (Me._F2S.Equals(value) = false) Then
				Me._F2S = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SSSLoan", DbType:="Money")>  _
	Public Property SSSLoan() As System.Nullable(Of Decimal)
		Get
			Return Me._SSSLoan
		End Get
		Set
			If (Me._SSSLoan.Equals(value) = false) Then
				Me._SSSLoan = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLoan", DbType:="Money")>  _
	Public Property PLoan() As System.Nullable(Of Decimal)
		Get
			Return Me._PLoan
		End Get
		Set
			If (Me._PLoan.Equals(value) = false) Then
				Me._PLoan = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBond", DbType:="Money")>  _
	Public Property CBond() As System.Nullable(Of Decimal)
		Get
			Return Me._CBond
		End Get
		Set
			If (Me._CBond.Equals(value) = false) Then
				Me._CBond = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Late", DbType:="Money")>  _
	Public Property Late() As System.Nullable(Of Decimal)
		Get
			Return Me._Late
		End Get
		Set
			If (Me._Late.Equals(value) = false) Then
				Me._Late = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Undertime", DbType:="Money")>  _
	Public Property Undertime() As System.Nullable(Of Decimal)
		Get
			Return Me._Undertime
		End Get
		Set
			If (Me._Undertime.Equals(value) = false) Then
				Me._Undertime = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COOP", DbType:="Money")>  _
	Public Property COOP() As System.Nullable(Of Decimal)
		Get
			Return Me._COOP
		End Get
		Set
			If (Me._COOP.Equals(value) = false) Then
				Me._COOP = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vale", DbType:="Money")>  _
	Public Property Vale() As System.Nullable(Of Decimal)
		Get
			Return Me._Vale
		End Get
		Set
			If (Me._Vale.Equals(value) = false) Then
				Me._Vale = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OD", DbType:="Money")>  _
	Public Property OD() As System.Nullable(Of Decimal)
		Get
			Return Me._OD
		End Get
		Set
			If (Me._OD.Equals(value) = false) Then
				Me._OD = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOthers", DbType:="Money")>  _
	Public Property DOthers() As System.Nullable(Of Decimal)
		Get
			Return Me._DOthers
		End Get
		Set
			If (Me._DOthers.Equals(value) = false) Then
				Me._DOthers = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TSalary", DbType:="Money")>  _
	Public Property TSalary() As System.Nullable(Of Decimal)
		Get
			Return Me._TSalary
		End Get
		Set
			If (Me._TSalary.Equals(value) = false) Then
				Me._TSalary = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TDeduction", DbType:="Money")>  _
	Public Property TDeduction() As System.Nullable(Of Decimal)
		Get
			Return Me._TDeduction
		End Get
		Set
			If (Me._TDeduction.Equals(value) = false) Then
				Me._TDeduction = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Net", DbType:="Money")>  _
	Public Property Net() As System.Nullable(Of Decimal)
		Get
			Return Me._Net
		End Get
		Set
			If (Me._Net.Equals(value) = false) Then
				Me._Net = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PeriodFrom", DbType:="DateTime")>  _
	Public Property PeriodFrom() As System.Nullable(Of Date)
		Get
			Return Me._PeriodFrom
		End Get
		Set
			If (Me._PeriodFrom.Equals(value) = false) Then
				Me._PeriodFrom = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PeriodTo", DbType:="DateTime")>  _
	Public Property PeriodTo() As System.Nullable(Of Date)
		Get
			Return Me._PeriodTo
		End Get
		Set
			If (Me._PeriodTo.Equals(value) = false) Then
				Me._PeriodTo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValeB", DbType:="Money")>  _
	Public Property ValeB() As System.Nullable(Of Decimal)
		Get
			Return Me._ValeB
		End Get
		Set
			If (Me._ValeB.Equals(value) = false) Then
				Me._ValeB = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COOPB", DbType:="Money")>  _
	Public Property COOPB() As System.Nullable(Of Decimal)
		Get
			Return Me._COOPB
		End Get
		Set
			If (Me._COOPB.Equals(value) = false) Then
				Me._COOPB = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OthersB", DbType:="Money")>  _
	Public Property OthersB() As System.Nullable(Of Decimal)
		Get
			Return Me._OthersB
		End Get
		Set
			If (Me._OthersB.Equals(value) = false) Then
				Me._OthersB = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SSSB", DbType:="Money")>  _
	Public Property SSSB() As System.Nullable(Of Decimal)
		Get
			Return Me._SSSB
		End Get
		Set
			If (Me._SSSB.Equals(value) = false) Then
				Me._SSSB = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PagibigB", DbType:="Money")>  _
	Public Property PagibigB() As System.Nullable(Of Decimal)
		Get
			Return Me._PagibigB
		End Get
		Set
			If (Me._PagibigB.Equals(value) = false) Then
				Me._PagibigB = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ODB", DbType:="Money")>  _
	Public Property ODB() As System.Nullable(Of Decimal)
		Get
			Return Me._ODB
		End Get
		Set
			If (Me._ODB.Equals(value) = false) Then
				Me._ODB = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_F2SB", DbType:="Money")>  _
	Public Property F2SB() As System.Nullable(Of Decimal)
		Get
			Return Me._F2SB
		End Get
		Set
			If (Me._F2SB.Equals(value) = false) Then
				Me._F2SB = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CalamityLoan", DbType:="Money")>  _
	Public Property CalamityLoan() As System.Nullable(Of Decimal)
		Get
			Return Me._CalamityLoan
		End Get
		Set
			If (Me._CalamityLoan.Equals(value) = false) Then
				Me._CalamityLoan = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CalamityB", DbType:="Money")>  _
	Public Property CalamityB() As System.Nullable(Of Decimal)
		Get
			Return Me._CalamityB
		End Get
		Set
			If (Me._CalamityB.Equals(value) = false) Then
				Me._CalamityB = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NightDiff", DbType:="Money")>  _
	Public Property NightDiff() As System.Nullable(Of Decimal)
		Get
			Return Me._NightDiff
		End Get
		Set
			If (Me._NightDiff.Equals(value) = false) Then
				Me._NightDiff = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CalamityLoanSSS", DbType:="Money")>  _
	Public Property CalamityLoanSSS() As System.Nullable(Of Decimal)
		Get
			Return Me._CalamityLoanSSS
		End Get
		Set
			If (Me._CalamityLoanSSS.Equals(value) = false) Then
				Me._CalamityLoanSSS = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CalamitySSSB", DbType:="Money")>  _
	Public Property CalamitySSSB() As System.Nullable(Of Decimal)
		Get
			Return Me._CalamitySSSB
		End Get
		Set
			If (Me._CalamitySSSB.Equals(value) = false) Then
				Me._CalamitySSSB = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsPaygen", DbType:="Int")>  _
	Public Property IsPaygen() As System.Nullable(Of Integer)
		Get
			Return Me._IsPaygen
		End Get
		Set
			If (Me._IsPaygen.Equals(value) = false) Then
				Me._IsPaygen = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SSSMonthly", DbType:="Money")>  _
	Public Property SSSMonthly() As System.Nullable(Of Decimal)
		Get
			Return Me._SSSMonthly
		End Get
		Set
			If (Me._SSSMonthly.Equals(value) = false) Then
				Me._SSSMonthly = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PagibigMonthly", DbType:="Money")>  _
	Public Property PagibigMonthly() As System.Nullable(Of Decimal)
		Get
			Return Me._PagibigMonthly
		End Get
		Set
			If (Me._PagibigMonthly.Equals(value) = false) Then
				Me._PagibigMonthly = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhilHealthMonthly", DbType:="Money")>  _
	Public Property PhilHealthMonthly() As System.Nullable(Of Decimal)
		Get
			Return Me._PhilHealthMonthly
		End Get
		Set
			If (Me._PhilHealthMonthly.Equals(value) = false) Then
				Me._PhilHealthMonthly = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbl_EmployeeRequirements")>  _
Partial Public Class tbl_EmployeeRequirement
	
	Private _EmpID As String
	
	Private _Xray As System.Nullable(Of Integer)
	
	Private _Transcript As System.Nullable(Of Integer)
	
	Private _Birth As System.Nullable(Of Integer)
	
	Private _SSS As System.Nullable(Of Integer)
	
	Private _PictureID As System.Nullable(Of Integer)
	
	Private _Phil As System.Nullable(Of Integer)
	
	Private _Tin As System.Nullable(Of Integer)
	
	Private _Pagibig As System.Nullable(Of Integer)
	
	Private _NBI As System.Nullable(Of Integer)
	
	Private _Police As System.Nullable(Of Integer)
	
	Private _MayorsPermit As System.Nullable(Of Integer)
	
	Private _Brgy As System.Nullable(Of Integer)
	
	Private _DrugTest As System.Nullable(Of Integer)
	
	Private _Certificate As System.Nullable(Of Integer)
	
	Private _SSSNumber As String
	
	Private _PhiNumber As String
	
	Private _TINNUmber As String
	
	Private _PagibigNumber As String
	
	Private _RTNNumber As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmpID", DbType:="NVarChar(50)")>  _
	Public Property EmpID() As String
		Get
			Return Me._EmpID
		End Get
		Set
			If (String.Equals(Me._EmpID, value) = false) Then
				Me._EmpID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Xray", DbType:="Int")>  _
	Public Property Xray() As System.Nullable(Of Integer)
		Get
			Return Me._Xray
		End Get
		Set
			If (Me._Xray.Equals(value) = false) Then
				Me._Xray = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Transcript", DbType:="Int")>  _
	Public Property Transcript() As System.Nullable(Of Integer)
		Get
			Return Me._Transcript
		End Get
		Set
			If (Me._Transcript.Equals(value) = false) Then
				Me._Transcript = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Birth", DbType:="Int")>  _
	Public Property Birth() As System.Nullable(Of Integer)
		Get
			Return Me._Birth
		End Get
		Set
			If (Me._Birth.Equals(value) = false) Then
				Me._Birth = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SSS", DbType:="Int")>  _
	Public Property SSS() As System.Nullable(Of Integer)
		Get
			Return Me._SSS
		End Get
		Set
			If (Me._SSS.Equals(value) = false) Then
				Me._SSS = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PictureID", DbType:="Int")>  _
	Public Property PictureID() As System.Nullable(Of Integer)
		Get
			Return Me._PictureID
		End Get
		Set
			If (Me._PictureID.Equals(value) = false) Then
				Me._PictureID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Phil", DbType:="Int")>  _
	Public Property Phil() As System.Nullable(Of Integer)
		Get
			Return Me._Phil
		End Get
		Set
			If (Me._Phil.Equals(value) = false) Then
				Me._Phil = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tin", DbType:="Int")>  _
	Public Property Tin() As System.Nullable(Of Integer)
		Get
			Return Me._Tin
		End Get
		Set
			If (Me._Tin.Equals(value) = false) Then
				Me._Tin = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pagibig", DbType:="Int")>  _
	Public Property Pagibig() As System.Nullable(Of Integer)
		Get
			Return Me._Pagibig
		End Get
		Set
			If (Me._Pagibig.Equals(value) = false) Then
				Me._Pagibig = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NBI", DbType:="Int")>  _
	Public Property NBI() As System.Nullable(Of Integer)
		Get
			Return Me._NBI
		End Get
		Set
			If (Me._NBI.Equals(value) = false) Then
				Me._NBI = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Police", DbType:="Int")>  _
	Public Property Police() As System.Nullable(Of Integer)
		Get
			Return Me._Police
		End Get
		Set
			If (Me._Police.Equals(value) = false) Then
				Me._Police = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MayorsPermit", DbType:="Int")>  _
	Public Property MayorsPermit() As System.Nullable(Of Integer)
		Get
			Return Me._MayorsPermit
		End Get
		Set
			If (Me._MayorsPermit.Equals(value) = false) Then
				Me._MayorsPermit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Brgy", DbType:="Int")>  _
	Public Property Brgy() As System.Nullable(Of Integer)
		Get
			Return Me._Brgy
		End Get
		Set
			If (Me._Brgy.Equals(value) = false) Then
				Me._Brgy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DrugTest", DbType:="Int")>  _
	Public Property DrugTest() As System.Nullable(Of Integer)
		Get
			Return Me._DrugTest
		End Get
		Set
			If (Me._DrugTest.Equals(value) = false) Then
				Me._DrugTest = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Certificate", DbType:="Int")>  _
	Public Property Certificate() As System.Nullable(Of Integer)
		Get
			Return Me._Certificate
		End Get
		Set
			If (Me._Certificate.Equals(value) = false) Then
				Me._Certificate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SSSNumber", DbType:="NVarChar(50)")>  _
	Public Property SSSNumber() As String
		Get
			Return Me._SSSNumber
		End Get
		Set
			If (String.Equals(Me._SSSNumber, value) = false) Then
				Me._SSSNumber = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhiNumber", DbType:="NVarChar(50)")>  _
	Public Property PhiNumber() As String
		Get
			Return Me._PhiNumber
		End Get
		Set
			If (String.Equals(Me._PhiNumber, value) = false) Then
				Me._PhiNumber = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TINNUmber", DbType:="NVarChar(50)")>  _
	Public Property TINNUmber() As String
		Get
			Return Me._TINNUmber
		End Get
		Set
			If (String.Equals(Me._TINNUmber, value) = false) Then
				Me._TINNUmber = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PagibigNumber", DbType:="NVarChar(50)")>  _
	Public Property PagibigNumber() As String
		Get
			Return Me._PagibigNumber
		End Get
		Set
			If (String.Equals(Me._PagibigNumber, value) = false) Then
				Me._PagibigNumber = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RTNNumber", DbType:="NVarChar(50)")>  _
	Public Property RTNNumber() As String
		Get
			Return Me._RTNNumber
		End Get
		Set
			If (String.Equals(Me._RTNNumber, value) = false) Then
				Me._RTNNumber = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbl_OtherDetails")>  _
Partial Public Class tbl_OtherDetail
	
	Private _EmpID As String
	
	Private _DFrom As System.Nullable(Of Date)
	
	Private _DTo As System.Nullable(Of Date)
	
	Private _HolDet As String
	
	Private _OADet As String
	
	Private _OSDet As String
	
	Private _OTHours As String
	
	Private _AbsentDate As String
	
	Private _NDHours As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmpID", DbType:="NVarChar(50)")>  _
	Public Property EmpID() As String
		Get
			Return Me._EmpID
		End Get
		Set
			If (String.Equals(Me._EmpID, value) = false) Then
				Me._EmpID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DFrom", DbType:="DateTime")>  _
	Public Property DFrom() As System.Nullable(Of Date)
		Get
			Return Me._DFrom
		End Get
		Set
			If (Me._DFrom.Equals(value) = false) Then
				Me._DFrom = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DTo", DbType:="DateTime")>  _
	Public Property DTo() As System.Nullable(Of Date)
		Get
			Return Me._DTo
		End Get
		Set
			If (Me._DTo.Equals(value) = false) Then
				Me._DTo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HolDet", DbType:="NVarChar(200)")>  _
	Public Property HolDet() As String
		Get
			Return Me._HolDet
		End Get
		Set
			If (String.Equals(Me._HolDet, value) = false) Then
				Me._HolDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OADet", DbType:="NVarChar(MAX)")>  _
	Public Property OADet() As String
		Get
			Return Me._OADet
		End Get
		Set
			If (String.Equals(Me._OADet, value) = false) Then
				Me._OADet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OSDet", DbType:="NVarChar(MAX)")>  _
	Public Property OSDet() As String
		Get
			Return Me._OSDet
		End Get
		Set
			If (String.Equals(Me._OSDet, value) = false) Then
				Me._OSDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTHours", DbType:="NVarChar(50)")>  _
	Public Property OTHours() As String
		Get
			Return Me._OTHours
		End Get
		Set
			If (String.Equals(Me._OTHours, value) = false) Then
				Me._OTHours = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AbsentDate", DbType:="NVarChar(MAX)")>  _
	Public Property AbsentDate() As String
		Get
			Return Me._AbsentDate
		End Get
		Set
			If (String.Equals(Me._AbsentDate, value) = false) Then
				Me._AbsentDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NDHours", DbType:="NVarChar(50)")>  _
	Public Property NDHours() As String
		Get
			Return Me._NDHours
		End Get
		Set
			If (String.Equals(Me._NDHours, value) = false) Then
				Me._NDHours = value
			End If
		End Set
	End Property
End Class

Partial Public Class SP_DTRWPAYResult
	
	Private _UserID As String
	
	Private _Employee As String
	
	Private _Date As System.Nullable(Of Date)
	
	Private _Session As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", DbType:="NVarChar(50)")>  _
	Public Property UserID() As String
		Get
			Return Me._UserID
		End Get
		Set
			If (String.Equals(Me._UserID, value) = false) Then
				Me._UserID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Employee", DbType:="NVarChar(153)")>  _
	Public Property Employee() As String
		Get
			Return Me._Employee
		End Get
		Set
			If (String.Equals(Me._Employee, value) = false) Then
				Me._Employee = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Date", Storage:="_Date", DbType:="DateTime")>  _
	Public Property [Date]() As System.Nullable(Of Date)
		Get
			Return Me._Date
		End Get
		Set
			If (Me._Date.Equals(value) = false) Then
				Me._Date = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Session", DbType:="NVarChar(50)")>  _
	Public Property Session() As String
		Get
			Return Me._Session
		End Get
		Set
			If (String.Equals(Me._Session, value) = false) Then
				Me._Session = value
			End If
		End Set
	End Property
End Class

Partial Public Class SP_CheckOTResult
	
	Private _EmpID As String
	
	Private _Name As String
	
	Private _OTHours As String
	
	Private _Amount As System.Nullable(Of Decimal)
	
	Private _PeriodFrom As System.Nullable(Of Date)
	
	Private _PeriodTo As System.Nullable(Of Date)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmpID", DbType:="NVarChar(50)")>  _
	Public Property EmpID() As String
		Get
			Return Me._EmpID
		End Get
		Set
			If (String.Equals(Me._EmpID, value) = false) Then
				Me._EmpID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(2000)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTHours", DbType:="NVarChar(50)")>  _
	Public Property OTHours() As String
		Get
			Return Me._OTHours
		End Get
		Set
			If (String.Equals(Me._OTHours, value) = false) Then
				Me._OTHours = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Amount", DbType:="Decimal(8,2)")>  _
	Public Property Amount() As System.Nullable(Of Decimal)
		Get
			Return Me._Amount
		End Get
		Set
			If (Me._Amount.Equals(value) = false) Then
				Me._Amount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PeriodFrom", DbType:="Date")>  _
	Public Property PeriodFrom() As System.Nullable(Of Date)
		Get
			Return Me._PeriodFrom
		End Get
		Set
			If (Me._PeriodFrom.Equals(value) = false) Then
				Me._PeriodFrom = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PeriodTo", DbType:="Date")>  _
	Public Property PeriodTo() As System.Nullable(Of Date)
		Get
			Return Me._PeriodTo
		End Get
		Set
			If (Me._PeriodTo.Equals(value) = false) Then
				Me._PeriodTo = value
			End If
		End Set
	End Property
End Class

Partial Public Class Sp_DisplayCorrectLeaveResult
	
	Private _EmpID As String
	
	Private _name As String
	
	Private _DaysLeave As System.Nullable(Of Double)
	
	Private _LeaveIssue As String
	
	Private _CorrectDaysLeave As System.Nullable(Of Double)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmpID", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property EmpID() As String
		Get
			Return Me._EmpID
		End Get
		Set
			If (String.Equals(Me._EmpID, value) = false) Then
				Me._EmpID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_name", DbType:="NVarChar(2000)")>  _
	Public Property name() As String
		Get
			Return Me._name
		End Get
		Set
			If (String.Equals(Me._name, value) = false) Then
				Me._name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DaysLeave", DbType:="Float")>  _
	Public Property DaysLeave() As System.Nullable(Of Double)
		Get
			Return Me._DaysLeave
		End Get
		Set
			If (Me._DaysLeave.Equals(value) = false) Then
				Me._DaysLeave = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LeaveIssue", DbType:="NChar(10)")>  _
	Public Property LeaveIssue() As String
		Get
			Return Me._LeaveIssue
		End Get
		Set
			If (String.Equals(Me._LeaveIssue, value) = false) Then
				Me._LeaveIssue = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CorrectDaysLeave", DbType:="Float")>  _
	Public Property CorrectDaysLeave() As System.Nullable(Of Double)
		Get
			Return Me._CorrectDaysLeave
		End Get
		Set
			If (Me._CorrectDaysLeave.Equals(value) = false) Then
				Me._CorrectDaysLeave = value
			End If
		End Set
	End Property
End Class
